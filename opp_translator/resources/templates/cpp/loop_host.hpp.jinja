{% macro arg_dat_redef(arg) %}
    {% set params -%}
arg{{arg.id}}.dat, {{arg.map_idx}}, arg{{arg.id}}.map, {{lh.dat(arg).dim}}, "{{lh.dat(arg).typ}}", {{arg.access_type.value}}
    {%- endset %}

    {%- if arg is opt -%}
op_opt_arg_dat(arg{{arg.id}}.opt, {{params}})
    {%- else -%}
op_arg_dat({{params}})
    {%- endif %}
{% endmacro -%}

{% macro indirect_dat_descriptor_def() %}
    {% if lh is indirect %}
int num_dats_indirect = {{lh.dats|indirect(lh)|length}};
int dats_indirect[{{lh.args|length}}] = {
        {%- for arg in lh.args -%}
    {{lh.dats|indirect(lh)|index(lh.dat(arg)) if arg is indirect else "-1"}}{{", " if not loop.last}}
        {%- endfor -%}
};
    {% endif %}
{% endmacro %}
{% block prologue %}

//*********************************************
// AUTO GENERATED CODE
//*********************************************
{% endblock %}
{% block kernel %}

namespace opp_k{{kernel_idx}} {
{{kernel_func}}
}

{% endblock %}
{% block kernel_wrapper %}
{% endblock %}
{% block host_prologue %}
{% endblock %}
{% block host_loop required %}
{% endblock %}
{% block host_epilogue %}
    opp_profiler->end("{{lh.kernel}}");
{%- endblock -%}
}

